# üõ†Ô∏è Laboratorio: Instalaci√≥n y configuraci√≥n b√°sica de Elasticsearch en Azure

## üìã **Objetivo**

Instalar y configurar Elasticsearch en una m√°quina virtual (VM) en Azure para cada usuario individualmente, usando un grupo de recursos propio.

---

## üìù **Requisitos previos**

* Cuenta Azure con presupuesto asignado (\$50 USD por usuario).
* Acceso al [Azure Portal](https://portal.azure.com).
* Terminal SSH (recomendado: Bash, PowerShell o similar).

---

## ‚öôÔ∏è **Paso 1: Creaci√≥n del Grupo de Recursos**

Cada estudiante crea su propio grupo:

* Nombre sugerido: `USER01-RG`, `USER02-RG`, etc.
* Regi√≥n recomendada: `East US 2` o la m√°s cercana.

**Procedimiento:**

1. Inicia sesi√≥n en [Azure Portal](https://portal.azure.com).
2. Dir√≠gete a **Resource Groups** ‚Üí **Create**.
3. Ingresa nombre (ej.: `USER01-RG`) y regi√≥n.
4. Click en **Review + create** y luego en **Create**.

---

## ‚öôÔ∏è **Paso 2: Crear una Virtual Network (VNet)**

Dentro del grupo creado:

* Nombre: `USER01-VNet`
* Address Space: `10.0.0.0/16`
* Subnet: `default` con rango `10.0.0.0/24`

**Procedimiento:**

1. Ingresa al grupo de recursos creado.
2. Click en **+ Add** ‚Üí busca **Virtual Network**.
3. Llena los datos anteriores.
4. Click en **Review + create** y luego **Create**.

---

## ‚öôÔ∏è **Paso 3: Crear M√°quina Virtual (VM)**

* Nombre VM: `USER01-VM`
* Imagen: **Ubuntu Server 22.04 LTS**
* Tama√±o recomendado: `Standard_B2s` (econ√≥mico)
* Autenticaci√≥n: SSH (generar y guardar claves)

**Procedimiento:**

1. Desde el grupo de recursos, click en **+ Add**, busca **Virtual Machine**.
2. Configura seg√∫n los datos anteriores.
3. En Networking, asocia la VM a la `USER01-VNet`.
4. Click en **Review + create** y luego **Create**.

> ‚ö†Ô∏è **Importante:** Guarda cuidadosamente la clave SSH generada.

---

## ‚öôÔ∏è **Paso 4: Conectarte a la Azure VM**

* Usa SSH para conectarte:

```bash
ssh usuario@<ip-publica-vm>
```

---

## ‚öôÔ∏è **Paso 5: Instalaci√≥n de Java**

Dentro de la VM ejecuta:

```bash
sudo apt update
sudo apt install openjdk-17-jdk -y
java -version
```

---

## ‚öôÔ∏è **Paso 6: Instalaci√≥n de Elasticsearch**

```bash
wget -qO - https://artifacts.elastic.co/GPG-KEY-elasticsearch | sudo gpg --dearmor -o /usr/share/keyrings/elasticsearch-keyring.gpg

echo "deb [signed-by=/usr/share/keyrings/elasticsearch-keyring.gpg] https://artifacts.elastic.co/packages/8.x/apt stable main" | sudo tee /etc/apt/sources.list.d/elastic-8.x.list

sudo apt update
sudo apt install elasticsearch -y
```

---

## ‚öôÔ∏è **Paso 7: Configurar Elasticsearch**

Edita configuraci√≥n:

```bash
sudo nano /etc/elasticsearch/elasticsearch.yml
```

A√±ade/modifica:

```yaml
network.host: 0.0.0.0
http.port: 9200
discovery.type: single-node
xpack.security.enabled: false
```

Guarda (`Ctrl+X`, `Y`, `Enter`).

---

## ‚öôÔ∏è **Paso 8: Iniciar Elasticsearch**

```bash
sudo systemctl enable elasticsearch
sudo systemctl start elasticsearch
sudo systemctl status elasticsearch
```

Verifica instalaci√≥n:

```bash
curl -X GET "localhost:9200"
```

---

## ‚öôÔ∏è **Paso 9: Acceso desde navegador**

En Azure, permite acceso al puerto `9200`:

* VM ‚Üí **Networking** ‚Üí A√±ade regla entrante `TCP 9200`.

Accede v√≠a navegador:

```
http://<ip-publica-vm>:9200
```

---

## ‚öôÔ∏è **Paso 10: Operaciones CRUD b√°sicas**

Desde terminal VM:

**Crear √≠ndice:**

```bash
curl -X PUT "localhost:9200/mi_indice"
```

**Crear documento:**

```bash
curl -X POST "localhost:9200/mi_indice/_doc/" -H 'Content-Type: application/json' -d'
{
  "curso": "Elasticsearch",
  "empresa": "Kyndryl",
  "duracion": "2 horas"
}'
```

**Consultar documentos:**

```bash
curl -X GET "localhost:9200/mi_indice/_search?pretty"
```

**Actualizar documento:** *(usa tu document\_id)*

```bash
curl -X POST "localhost:9200/mi_indice/_update/<document_id>" -H 'Content-Type: application/json' -d'
{
  "doc": {"duracion": "4 horas"}
}'
```

**Eliminar documento:** *(usa tu document\_id)*

```bash
curl -X DELETE "localhost:9200/mi_indice/_doc/<document_id>"
```
OPCIONAL:

Descargar en el linux en archivo json:
1.- wget https://catalogodatos.cnmc.es/dataset/c5037bec-4e66-4bfb-a416-03cad20c35d4/resource/34e8a60e-a91d-4a11-ad15-1cad0c3f15a9/download/ds_3294_1.json -O datos_cnmc.json 

2.- sudo apt install python3-pip -y

3.- sudo vi transform_to_bulk.py

4.- Crea el script de transformaci√≥n:

Crea un archivo llamado transform_to_bulk.py en tu VM

```
import json

input_json_file = "datos_cnmc.json"  # Nombre del archivo JSON descargado
output_bulk_file = "datos_cnmc_bulk.json" # Nombre del archivo de salida para la API Bulk
index_name = "datos_consumo_energia"  # El nombre del √≠ndice en Elasticsearch donde se guardar√°n los datos

try:
    with open(input_json_file, 'r', encoding='utf-8-sig') as f_in:
        data = json.load(f_in) # Carga todo el array JSON
except json.JSONDecodeError as e:
    print(f"Error al decodificar JSON: {e}")
    print("Aseg√∫rate de que el archivo es un JSON v√°lido o un array JSON.")
    exit(1)

if not isinstance(data, list):
    print("El archivo JSON no es un array de objetos. Ajusta el script si es un solo objeto o JSON Lines.")
    # Si fuera JSON Lines (un objeto JSON por l√≠nea), el proceso ser√≠a diferente
    # En ese caso, leer√≠as l√≠nea por l√≠nea y solo a√±adir√≠as la l√≠nea de acci√≥n.
    exit(1)

with open(output_bulk_file, 'w', encoding='utf-8') as f_out:
    for i, doc in enumerate(data):
        # L√≠nea de metadatos para la acci√≥n de indexaci√≥n
        # Opcional: si tus documentos tienen un campo 'id' que quieres usar como _id en ES,
        # puedes cambiar `{"index": {"_index": index_name}}` a `{"index": {"_index": index_name, "_id": doc.get('id')}}`
        f_out.write(json.dumps({"index": {"_index": index_name}}) + "\n")
        # L√≠nea del documento JSON real
        f_out.write(json.dumps(doc) + "\n")

print(f"Archivo '{input_json_file}' transformado a '{output_bulk_file}' para Elasticsearch Bulk API.")
print(f"Los datos se indexar√°n en el √≠ndice '{index_name}'.")
```

5.- Ejecuta el script de transformaci√≥n
python3 transform_to_bulk.py





---

## üöÆ **Limpieza de recursos** *(Opcional al finalizar)*

Desde Azure Portal, elimina tu grupo de recursos:

* Ve a tu **Resource Group** ‚Üí **Delete resource group**.

---

## üìå **Recomendaciones finales**

* Monitorea regularmente tu uso en Azure.
* Guarda evidencia de resultados y comandos realizados.
* Comparte dudas o problemas durante el curso.

---

¬°Buen trabajo! üöÄ Ahora tienes Elasticsearch funcionando en tu Azure VM.
